openapi: 3.1.0
info:
  contact:
    name: SWEN3
    url: https://www.technikum-wien.at
  description: DMS
  title: Paperless Document Management REST-Server
  version: 1.0.0
servers:
- url: localhost:8081
tags:
- description: Paperless Document Management REST-API
  name: paperless
paths:
  /api/documents:
    get:
      operationId: getDocuments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/documents"
          description: Success
      summary: Returns a list of documents
      tags:
      - paperless
      x-accepts:
      - application/json
      x-tags:
      - tag: paperless
    post:
      operationId: createDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/document"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/document"
          description: Document successfully created.
        "400":
          description: Document creation failed due to bad request!
      summary: Create a new document
      tags:
      - paperless
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: paperless
  /api/documents/{id}:
    delete:
      operationId: deleteDocument
      parameters:
      - description: The id of the document
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Document deleted successfully
        "404":
          description: Document does not exist with this id!
      summary: Delete a document by id
      tags:
      - paperless
      x-accepts:
      - application/json
      x-tags:
      - tag: paperless
    get:
      operationId: getDocument
      parameters:
      - description: The id of the document
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/document"
          description: Success
        "404":
          description: Document does not exist with this id!
      summary: Retrieve a document by id
      tags:
      - paperless
      x-accepts:
      - application/json
      x-tags:
      - tag: paperless
    put:
      operationId: updateDocument
      parameters:
      - description: The id of the document
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/document"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/document"
          description: Success
        "404":
          description: Document does not exist with this id!
      summary: Update a document by id
      tags:
      - paperless
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: paperless
components:
  schemas:
    document:
      example:
        uploadDate: 2000-01-23T04:56:07.000+00:00
        author: author
        id: 0
        title: title
        content: content
      properties:
        id:
          description: The unique id of the document
          format: int64
          type: integer
        title:
          description: The title of the document
          type: string
        author:
          description: The author of the document
          type: string
        content:
          description: The content of the document
          type: string
        uploadDate:
          description: When the document was uploaded
          format: date-time
          type: string
      required:
      - author
      - content
      - title
    documents:
      items:
        $ref: "#/components/schemas/document"
      type: array
